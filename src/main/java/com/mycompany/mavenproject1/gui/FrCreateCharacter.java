/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mavenproject1.gui;
import com.mycompany.mavenproject1.RpgCharacter;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Random;


import java.awt.Image; 
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;   
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author sever
 */
public class FrCreateCharacter extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(FrCreateCharacter.class.getName());
    
    DefaultTableModel teamTableModel;
    ArrayList<RpgCharacter[]> teams = new ArrayList<>();
    private String caminhoImagem;
    
    /**
     * Creates new form CreateCharacter
     */
    public FrCreateCharacter() {
        initComponents();
        this.labelCharHP = new JLabel[]{labelChar1HP, labelChar2HP, labelChar3HP};
        this.labelCharName = new JLabel[]{labelChar1Name, labelChar2Name, labelChar3Name};
        this.labelCharImage = new JLabel[]{labelChar1Image, labelChar2Image, labelChar3Image};        
        this.labelCharIcon = new JLabel[]{labelChar1Icon, labelChar2Icon, labelChar3Icon};        
        this.labelEnemyHP = new JLabel[]{labelEnemy1HP, labelEnemy2HP, labelEnemy3HP};
        this.labelEnemyName = new JLabel[]{labelEnemy1Name, labelEnemy2Name, labelEnemy3Name};
        this.labelEnemyImage = new JLabel[]{labelEnemy1Image, labelEnemy2Image, labelEnemy3Image};
        this.labelEnemyIcon = new JLabel[]{labelEnemy1Icon, labelEnemy2Icon, labelEnemy3Icon};
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfCharacterName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbRpgClass = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfStrength = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfAgility = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tfIntelligence = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        tfVitality = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        LbnImagem = new javax.swing.JLabel();
        BtnSalvarImagem = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        TimeImagem1 = new javax.swing.JLabel();
        TimeImagem2 = new javax.swing.JLabel();
        TimeImagem3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        BtnSalvarTime = new javax.swing.JButton();
        BtnExcluir = new javax.swing.JButton();
        BtnBatalharTime = new javax.swing.JButton();
        txtChar1Name = new javax.swing.JTextField();
        txtChar2Name = new javax.swing.JTextField();
        txtChar3Name = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        btnBattleRun = new javax.swing.JButton();
        btnCommonAttack = new javax.swing.JButton();
        btnClassAttack = new javax.swing.JButton();
        btnDeflect = new javax.swing.JButton();
        labelChar1Name = new javax.swing.JLabel();
        labelChar2Name = new javax.swing.JLabel();
        labelChar3Name = new javax.swing.JLabel();
        labelChar1Icon = new javax.swing.JLabel();
        labelChar2Icon = new javax.swing.JLabel();
        labelChar3Icon = new javax.swing.JLabel();
        labelChar1HP = new javax.swing.JLabel();
        labelChar2HP = new javax.swing.JLabel();
        labelChar3HP = new javax.swing.JLabel();
        labelEnemy3Icon = new javax.swing.JLabel();
        labelEnemy1HP = new javax.swing.JLabel();
        labelEnemy2HP = new javax.swing.JLabel();
        labelEnemy3HP = new javax.swing.JLabel();
        labelEnemy1Name = new javax.swing.JLabel();
        labelEnemy2Name = new javax.swing.JLabel();
        labelEnemy3Name = new javax.swing.JLabel();
        labelEnemy1Icon = new javax.swing.JLabel();
        labelEnemy2Icon = new javax.swing.JLabel();
        labelChar1Image = new javax.swing.JLabel();
        labelChar2Image = new javax.swing.JLabel();
        labelChar3Image = new javax.swing.JLabel();
        labelEnemy1Image = new javax.swing.JLabel();
        labelEnemy2Image = new javax.swing.JLabel();
        labelEnemy3Image = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        miCharacterEditorCard = new javax.swing.JMenuItem();
        miTeamEditorCard = new javax.swing.JMenuItem();
        miBattleCard = new javax.swing.JMenuItem();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(650, 680));

        jPanel1.setPreferredSize(new java.awt.Dimension(650, 650));
        jPanel1.setLayout(new java.awt.CardLayout());

        jPanel2.setBackground(new java.awt.Color(40, 40, 40));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(242, 242, 242));
        jLabel1.setText("cadastro de personagem");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(242, 242, 242));
        jLabel2.setText("Nome:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(242, 242, 242));
        jLabel3.setText("Classe:");

        cbRpgClass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Guerreiro", "Arqueiro", "Mago" }));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(242, 242, 242));
        jLabel4.setText("Atributos");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(242, 242, 242));
        jLabel5.setText("Você tem 15 pontos para gastar");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(242, 242, 242));
        jLabel6.setText("Força:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(242, 242, 242));
        jLabel7.setText("Agilidade");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(242, 242, 242));
        jLabel8.setText("Vitalidade");

        btnSalvar.setText("Salvar");
        btnSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSalvarMouseClicked(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(242, 242, 242));
        jLabel13.setText("Inteligência");

        LbnImagem.setForeground(new java.awt.Color(242, 242, 242));
        LbnImagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LbnImagem.setText("Imagem");
        LbnImagem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(242, 242, 242)));

        BtnSalvarImagem.setText("Salvar Imagem");
        BtnSalvarImagem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnSalvarImagemMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel13)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfIntelligence, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                    .addComponent(tfAgility, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                    .addComponent(tfVitality)
                                    .addComponent(tfStrength)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(tfCharacterName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbRpgClass, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(173, 173, 173)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(BtnSalvarImagem)
                                .addGap(97, 97, 97))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(LbnImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(169, 169, 169)))
                .addContainerGap(62, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(214, 214, 214))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tfCharacterName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbRpgClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(48, 48, 48)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfStrength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfAgility, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfVitality, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfIntelligence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(40, 40, 40))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(LbnImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(BtnSalvarImagem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(btnSalvar)
                .addGap(89, 89, 89))
        );

        jPanel1.add(jPanel2, "CharacterEditorCard");

        jLabel12.setText("vizualização do time");

        TimeImagem1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TimeImagem1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TimeImagem1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        TimeImagem1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        TimeImagem2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TimeImagem2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TimeImagem2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        TimeImagem2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        TimeImagem3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TimeImagem3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TimeImagem3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        TimeImagem3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {
                "Selecionar", "Imgem", "Nome", "Classe", "HP", "Mana", "Força", "Agilidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, javax.swing.ImageIcon.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(60);

        jTable1.getModel().addTableModelListener(e -> {
            int row = e.getFirstRow();
            int column = e.getColumn();

            if (column == 0 && row >= 0) {
                Boolean selecionado = (Boolean) jTable1.getValueAt(row, 0);
                Object iconeObj = jTable1.getValueAt(row, 1);

                if (selecionado != null && selecionado) {
                    adicionarImagemAoTime(iconeObj, row);
                } else {
                    removerImagemDoTime(row);
                }
            }
        });
        jScrollPane3.setViewportView(jTable1);

        BtnSalvarTime.setText("Salvar");
        BtnSalvarTime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnSalvarTimeMouseClicked1(evt);
            }
        });

        BtnExcluir.setText("Excluir");
        BtnExcluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnExcluirMouseClicked(evt);
            }
        });

        BtnBatalharTime.setText("Batalhar");
        BtnBatalharTime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnBatalharTimeMouseClicked(evt);
            }
        });

        txtChar1Name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtChar1Name.setText("Nome1");

        txtChar2Name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtChar2Name.setText("Nome2");
        txtChar2Name.setToolTipText("");

        txtChar3Name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtChar3Name.setText("Nome3");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] { "Selecionar", "Nome da Equipe", "Personagens" }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class,
                java.lang.String.class,
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] { true, false, false };

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        }
    );
    teamTableModel = (javax.swing.table.DefaultTableModel) jTable2.getModel();

    jTable2.setRowHeight(30);
    jScrollPane2.setViewportView(jTable2);
    jScrollPane2.setViewportView(jTable2);

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(209, 209, 209)
                    .addComponent(jLabel11)
                    .addGap(94, 94, 94)
                    .addComponent(jLabel9)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(txtChar1Name, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(TimeImagem1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(83, 83, 83))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addComponent(BtnSalvarTime, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(90, 90, 90)))))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(28, 28, 28)
                    .addComponent(BtnBatalharTime, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(336, 336, 336)
                            .addComponent(jLabel10))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(102, 102, 102)
                            .addComponent(BtnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap())
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel12)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(TimeImagem2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(txtChar2Name, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(106, 106, 106)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(TimeImagem3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(txtChar3Name, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGap(149, 149, 149))))
        .addComponent(jScrollPane3)
        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
    );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel12)
            .addGap(27, 27, 27)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(TimeImagem2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(TimeImagem1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(TimeImagem3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(txtChar1Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(txtChar2Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(txtChar3Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(12, 12, 12)
            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(BtnBatalharTime)
                    .addGap(13, 13, 13))
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(BtnExcluir)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnSalvarTime)
                            .addGap(18, 18, 18)))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel10)
                        .addComponent(jLabel11)
                        .addComponent(jLabel9))))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(50, 50, 50)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    jPanel1.add(jPanel3, "TeamEditorCard");

    btnBattleRun.setText("Abandonar Partida");
    btnBattleRun.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnBattleRunActionPerformed(evt);
        }
    });

    btnCommonAttack.setText("Corpo a Corpo");
    btnCommonAttack.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            btnCommonAttackMouseClicked(evt);
        }
    });

    btnClassAttack.setText("ataque especial");
    btnClassAttack.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            btnClassAttackMouseClicked(evt);
        }
    });

    btnDeflect.setText("Desviar");
    btnDeflect.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            btnDeflectMouseClicked(evt);
        }
    });

    labelChar1Name.setText("nome1");

    labelChar2Name.setText("nome2");

    labelChar3Name.setText("nome3");

    labelChar1HP.setText("HP");

    labelChar2HP.setText("HP");

    labelChar3HP.setText("HP");

    labelEnemy1HP.setText("HP");

    labelEnemy2HP.setText("HP");

    labelEnemy3HP.setText("HP");

    labelEnemy1Name.setText("nome1");

    labelEnemy2Name.setText("nome2");

    labelEnemy3Name.setText("nome3");

    labelChar1Image.setText("  ");

    labelEnemy1Image.setText("  ");

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addGap(46, 46, 46)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(labelEnemy1Name)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(labelEnemy1Icon))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(labelEnemy2Name)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(labelEnemy2Icon))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(labelEnemy3Name)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(labelEnemy3Icon)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelEnemy3HP, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(labelEnemy1HP)
                                .addComponent(labelEnemy2HP)))
                        .addComponent(labelChar1Image, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(labelChar2Image, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(labelChar3Image, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGap(147, 147, 147)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(labelChar1Name)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(labelChar1Icon))
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(labelChar2Name)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(labelChar2Icon))
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(labelChar3Name)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(labelChar3Icon)))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(labelChar3HP)
                                        .addComponent(labelChar2HP)
                                        .addComponent(labelChar1HP)))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                            .addGap(69, 69, 69)
                            .addComponent(labelEnemy1Image, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(labelEnemy2Image, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(labelEnemy3Image, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnBattleRun, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(btnCommonAttack, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(47, 47, 47)
                            .addComponent(btnClassAttack, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(56, 56, 56)
                    .addComponent(btnDeflect, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(80, Short.MAX_VALUE))
    );
    jPanel4Layout.setVerticalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addGap(27, 27, 27)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelEnemy1Name)
                        .addComponent(labelEnemy1Icon))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelEnemy2Name)
                        .addComponent(labelEnemy2Icon))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelEnemy3Name)
                        .addComponent(labelEnemy3Icon)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelEnemy1Image, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelEnemy3Image))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(labelEnemy2Image, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)))
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addComponent(labelEnemy1HP)
                    .addGap(18, 18, 18)
                    .addComponent(labelEnemy2HP)
                    .addGap(18, 18, 18)
                    .addComponent(labelEnemy3HP)))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(99, 99, 99)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelChar1Image, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelChar3Image))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                            .addComponent(labelChar2Image, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(60, 60, 60)))
                    .addGap(18, 18, 18))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelChar1Name)
                        .addComponent(labelChar1Icon)
                        .addComponent(labelChar1HP))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelChar2Name)
                        .addComponent(labelChar2Icon)
                        .addComponent(labelChar2HP))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelChar3Name)
                        .addComponent(labelChar3Icon)
                        .addComponent(labelChar3HP))
                    .addGap(28, 28, 28)))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(btnClassAttack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCommonAttack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDeflect, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
            .addComponent(btnBattleRun)
            .addGap(24, 24, 24))
    );

    jPanel1.add(jPanel4, "BattleCard");

    jMenu1.setText("tab");

    miCharacterEditorCard.setText("Character Editor");
    miCharacterEditorCard.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            miCharacterEditorCardActionPerformed(evt);
        }
    });
    jMenu1.add(miCharacterEditorCard);

    miTeamEditorCard.setText("Team Editor");
    miTeamEditorCard.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            miTeamEditorCardActionPerformed(evt);
        }
    });
    jMenu1.add(miTeamEditorCard);

    miBattleCard.setText("Battle");
    miBattleCard.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            miBattleCardActionPerformed(evt);
        }
    });
    jMenu1.add(miBattleCard);

    jMenuBar1.add(jMenu1);

    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 868, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
    );

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void miCharacterEditorCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miCharacterEditorCardActionPerformed
        CardLayout cardlayout = (CardLayout) jPanel1.getLayout();
        cardlayout.show(jPanel1,"CharacterEditorCard");
    }//GEN-LAST:event_miCharacterEditorCardActionPerformed

    private void miTeamEditorCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miTeamEditorCardActionPerformed
        CardLayout cardlayout = (CardLayout) jPanel1.getLayout();
        cardlayout.show(jPanel1,"TeamEditorCard");
    }//GEN-LAST:event_miTeamEditorCardActionPerformed

    private void miBattleCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miBattleCardActionPerformed
        CardLayout cardlayout = (CardLayout) jPanel1.getLayout();
        cardlayout.show(jPanel1,"BattleCard");       
    }//GEN-LAST:event_miBattleCardActionPerformed

    ArrayList<RpgCharacter> characters = new ArrayList<RpgCharacter>();
    private void btnSalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalvarMouseClicked
     try {
            String characterName = tfCharacterName.getText();
            if (characterName.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "O nome do personagem não pode estar vazio.", "Erro de Validação", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int intStrength = Integer.parseInt(tfStrength.getText());
            int intAgility = Integer.parseInt(tfAgility.getText());
            int intVitality = Integer.parseInt(tfVitality.getText());
            int intIntelligence = Integer.parseInt(tfIntelligence.getText());
            int totalPoints = intStrength + intVitality + intAgility + intIntelligence;

            if (totalPoints > 15) {
                JOptionPane.showMessageDialog(this,
                    "Você distribuiu " + totalPoints + " pontos.\nO máximo permitido é 15!",
                    "Limite de Pontos Excedido",
                    JOptionPane.ERROR_MESSAGE);
                return;
            }

            
            int classIndex = cbRpgClass.getSelectedIndex();
            RpgCharacter tempchar = new RpgCharacter(characterName, classIndex, intStrength, intAgility, intVitality, intIntelligence);

            
 if (tempchar != null) {

            characters.add(tempchar);
            JOptionPane.showMessageDialog(this, "Personagem cadastrado com sucesso!");

   
            ImageIcon imagemIcone = null;
            if (caminhoImagem != null && !caminhoImagem.isEmpty()) {
                ImageIcon original = new ImageIcon(caminhoImagem);
                Image imgRedimensionada = original.getImage().getScaledInstance(60, 60, Image.SCALE_SMOOTH);
                imagemIcone = new ImageIcon(imgRedimensionada);
            }

            DefaultTableModel tablemodel = (DefaultTableModel) jTable1.getModel();
            tablemodel.addRow(new Object[]{
                false,
                imagemIcone,
                tempchar.getName(),
                tempchar.getRpgClassName(),
                Integer.toString(tempchar.getStamina()),
                Integer.toString(tempchar.getMana()),
                Integer.toString(tempchar.getStrength()),
                Integer.toString(tempchar.getVitality()),
                Integer.toString(tempchar.getAgility()),
            });
            System.out.println("Caminho da imagem: " + caminhoImagem);
            System.out.println("Imagem criada: " + (imagemIcone != null));
            jTable1.setRowHeight(60);
            limparCampos();
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, insira apenas números inteiros nos campos de atributos.", "Erro de Formato", JOptionPane.ERROR_MESSAGE);
        }
                                     
    }//GEN-LAST:event_btnSalvarMouseClicked
private void limparCampos(){

tfCharacterName.setText("");

tfStrength.setText("");

tfAgility.setText("");

tfVitality.setText("");

tfIntelligence.setText("");

cbRpgClass.setSelectedIndex(0);

LbnImagem.setIcon(null); 

LbnImagem.setText("Imagem");
caminhoImagem = null;
}
    Random randomGenerator = new Random();
    boolean playableCharacter = true;
    RpgCharacter[] combatPlayerCharacters = new RpgCharacter[3];
    RpgCharacter[] combatComputerCharacters = new RpgCharacter[3];
    RpgCharacter[] playerTeam = new RpgCharacter[3];
    RpgCharacter[] computerTeam = new RpgCharacter[3];
    int currentCharacter=0;
    JLabel[] labelCharName;
    JLabel[] labelCharHP;
    JLabel[] labelCharImage;
    JLabel[] labelCharIcon;
    JLabel[] labelEnemyName;
    JLabel[] labelEnemyHP;
    JLabel[] labelEnemyImage;   
    JLabel[] labelEnemyIcon;
    
    private void updateTeaInBattle(){
        if(currentCharacter==2){
            playableCharacter = !playableCharacter;
            currentCharacter=0;
        }else{
            currentCharacter++;
        }
        loadTeamInBattle(playerTeam,computerTeam);
        currentCharacter();
    }
private void adicionarImagemAoTime(Object iconeObj, int row) {
    if (!(iconeObj instanceof ImageIcon)) return;

    ImageIcon iconeOriginal = (ImageIcon) iconeObj;
    String nomePersonagem = (String) jTable1.getValueAt(row, 2); 

    JLabel[] slots = {TimeImagem1, TimeImagem2, TimeImagem3};
    javax.swing.JTextField[] camposNome = {txtChar1Name, txtChar2Name, txtChar3Name};

    for (int i = 0; i < slots.length; i++) {
        if (slots[i].getIcon() == null) {
            // Redimensiona a imagem
            Image img = iconeOriginal.getImage();
            Image scaled = img.getScaledInstance(
                slots[i].getWidth(), slots[i].getHeight(),
                Image.SCALE_SMOOTH
            );
            ImageIcon redimensionada = new ImageIcon(scaled);

            slots[i].setIcon(redimensionada);
            camposNome[i].setText(nomePersonagem);

            slots[i].setHorizontalAlignment(JLabel.CENTER);
            camposNome[i].setHorizontalAlignment(javax.swing.JTextField.CENTER);

            return;
        }
    }

    JOptionPane.showMessageDialog(this, "Você já selecionou 3 personagens!");
}

    private void removerImagemDoTime(int row) {
    String nomePersonagem = (String) jTable1.getValueAt(row, 2);
    JLabel[] slots = {TimeImagem1, TimeImagem2, TimeImagem3};
    javax.swing.JTextField[] camposNome = {txtChar1Name, txtChar2Name, txtChar3Name};

    for (int i = 0; i < slots.length; i++) {
        if (camposNome[i].getText().equals(nomePersonagem)) {
            slots[i].setIcon(null);
            camposNome[i].setText("");
            return;
        }
    }
}
  private RpgCharacter[] gerarInimigosAleatorios() {
    Random random = new Random();
    RpgCharacter[] inimigos = new RpgCharacter[3];

    String[] nomes = {
        "Goblin", "Orc", "Troll", "Lobo", "Espectro",
        "Bandido", "Gárgula", "Esqueleto", "Zumbi", "Sombrio"
    };

    for (int i = 0; i < 3; i++) {
        String nome = nomes[random.nextInt(nomes.length)];

        int classe = random.nextInt(3);

        int totalPontos = 20;
        int forca = random.nextInt(totalPontos + 1);
        totalPontos -= forca;

        int agilidade = random.nextInt(totalPontos + 1);
        totalPontos -= agilidade;

        int vitalidade = random.nextInt(totalPontos + 1);
        totalPontos -= vitalidade;

        int inteligencia = totalPontos; 

        inimigos[i] = new RpgCharacter(nome, classe, forca, agilidade, vitalidade, inteligencia);
    }

    return inimigos;
}
    private void btnCommonAttackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCommonAttackMouseClicked
        float damageTaken = combatPlayerCharacters[currentCharacter].commonAttack(playerTeam[currentCharacter], computerTeam[currentCharacter]);
        showCombatActionMessage(damageTaken, playerTeam[currentCharacter], computerTeam[currentCharacter], "ataque corpo a corpo");
        updateTeaInBattle();
        // invoca a função "commonAttack" da classe "Character"
    }//GEN-LAST:event_btnCommonAttackMouseClicked

    private void btnClassAttackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClassAttackMouseClicked
        float damageTaken = combatPlayerCharacters[currentCharacter].specialAttack(playerTeam[currentCharacter], computerTeam[currentCharacter]);
        showCombatActionMessage(damageTaken, playerTeam[currentCharacter], computerTeam[currentCharacter], btnClassAttack.getText());
        updateTeaInBattle();
        // invoca a função "specialAttack" da classe "Character"
    }//GEN-LAST:event_btnClassAttackMouseClicked

    private void btnDeflectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeflectMouseClicked
        // invoca a função "deflect" da classe "Character"
    }//GEN-LAST:event_btnDeflectMouseClicked

    private void BtnSalvarImagemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnSalvarImagemMouseClicked
    javax.swing.JFileChooser fileChooser = new 
            javax.swing.JFileChooser(); 
    fileChooser.setDialogTitle("Escolha uma imagem"); 

    javax.swing.filechooser.FileNameExtensionFilter filter = new 
            javax.swing.filechooser.FileNameExtensionFilter( "Imagens JPG, PNG e GIF", "jpg", "jpeg", "png", "gif");
    fileChooser.setFileFilter(filter); 

    int userSelection = fileChooser.showOpenDialog(this); 
    if (userSelection == javax.swing.JFileChooser.APPROVE_OPTION) { 
        try { 
            java.io.File selectedFile = fileChooser.getSelectedFile(); 
            caminhoImagem = selectedFile.getAbsolutePath(); 
            
            javax.swing.ImageIcon imageIcon = new 
            javax.swing.ImageIcon(caminhoImagem);
            
            java.awt.Image image = imageIcon.getImage(); 
            java.awt.Image newimg = image.getScaledInstance(LbnImagem.getWidth(), LbnImagem.getHeight(), java.awt.Image.SCALE_SMOOTH); 
            javax.swing.ImageIcon finalIcon = new 
            javax.swing.ImageIcon(newimg);
            
            LbnImagem.setIcon(finalIcon); 
                
            LbnImagem.setText(""); 
        
        } catch (Exception e) { 
            javax.swing.JOptionPane.showMessageDialog(this, "Erro ao carregar a imagem.", "Erro", javax.swing.JOptionPane.ERROR_MESSAGE); 
        } 
    } 
    }//GEN-LAST:event_BtnSalvarImagemMouseClicked
   
    private void btnBattleRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBattleRunActionPerformed
        miTeamEditorCardActionPerformed(evt); //leva o usuário para a tela de seleção de equipes
        JOptionPane optionPane = new JOptionPane("você fugiu da batalha :(", JOptionPane.INFORMATION_MESSAGE);
        JDialog dialog =  optionPane.createDialog(null, "");
        dialog.setVisible(true);
    }//GEN-LAST:event_btnBattleRunActionPerformed

    private void BtnBatalharTimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnBatalharTimeMouseClicked
        if (teams == null || teams.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                "Nenhuma equipe foi salva ainda!",
                "Aviso",
                JOptionPane.WARNING_MESSAGE);
            return;
        }

        String[] nomesEquipes = new String[teams.size()];
        for (int i = 0; i < teams.size(); i++) {
            RpgCharacter[] equipe = teams.get(i);

            String nomes = equipe[0].getName() + ", " + equipe[1].getName() + ", " + equipe[2].getName();
            nomesEquipes[i] = "Equipe " + (i + 1) + " — [" + nomes + "]";
        }

        String selecionada = (String) JOptionPane.showInputDialog(
            this,
            "Escolha a equipe para batalhar:",
            "Selecionar Equipe",
            JOptionPane.PLAIN_MESSAGE,
            null,
            nomesEquipes,
            nomesEquipes[0]
        );

        if (selecionada == null) {
            return;
        }

        int index = Integer.parseInt(selecionada.split(" ")[1]) - 1;

        RpgCharacter[] equipeSelecionada = teams.get(index);

        RpgCharacter[] equipeInimiga = gerarInimigosAleatorios();

        playerTeam = equipeSelecionada;
        computerTeam = equipeInimiga;
        loadTeamInBattle(playerTeam, computerTeam);

        CardLayout cl = (CardLayout) jPanel1.getLayout();
        cl.show(jPanel1, "BattleCard");
    }//GEN-LAST:event_BtnBatalharTimeMouseClicked

    private void BtnSalvarTimeMouseClicked1(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnSalvarTimeMouseClicked1
 try {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        java.util.List<Integer> indicesSelecionados = new ArrayList<>();

        for (int i = 0; i < model.getRowCount(); i++) {
            Object val = model.getValueAt(i, 0);
            boolean marcado = false;
            if (val instanceof Boolean) {
                marcado = (Boolean) val;
            } else if (val instanceof String) {
                marcado = Boolean.parseBoolean((String) val);
            }
            if (marcado) indicesSelecionados.add(i);
        }

        if (indicesSelecionados.size() != 3) {
            JOptionPane.showMessageDialog(this,
                "Você deve marcar exatamente 3 personagens (checkboxes) para formar a equipe!",
                "Seleção Inválida",
                JOptionPane.WARNING_MESSAGE);
            return;
        }

        RpgCharacter[] novaEquipe = new RpgCharacter[3];
        StringBuilder nomesEquipe = new StringBuilder();

        for (int i = 0; i < 3; i++) {
            int modelIndex = indicesSelecionados.get(i);

            if (modelIndex < 0 || modelIndex >= characters.size()) {
                throw new IllegalStateException("Índice de personagem inválido: " + modelIndex);
            }

            RpgCharacter personagem = characters.get(modelIndex);
            novaEquipe[i] = personagem;

            nomesEquipe.append(personagem.getName());
            if (i < 2) nomesEquipe.append(", ");
        }

        teams.add(novaEquipe);

        if (teamTableModel == null) {
            throw new IllegalStateException("teamTableModel não inicializado. Inicialize-o no construtor.");
        }

        String nomeEquipe = "Equipe " + (teamTableModel.getRowCount() + 1);
        teamTableModel.addRow(new Object[]{false, nomeEquipe, nomesEquipe.toString()});

        JOptionPane.showMessageDialog(this, "Equipe cadastrada com sucesso!");
        System.out.println("Equipe salva: " + nomesEquipe.toString());
    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erro ao salvar a equipe: " + ex.getMessage(),
            "Erro", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_BtnSalvarTimeMouseClicked1

    private void BtnExcluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnExcluirMouseClicked
 boolean temPersonagemSelecionado = false;
    DefaultTableModel modelPersonagem = (DefaultTableModel) jTable1.getModel();
    for (int i = 0; i < modelPersonagem.getRowCount(); i++) {
        Object val = modelPersonagem.getValueAt(i, 0);
        if (val instanceof Boolean && (Boolean) val) {
            temPersonagemSelecionado = true;
            break;
        }
    }

    boolean temTimeSelecionado = false;
    DefaultTableModel modelTime = (DefaultTableModel) jTable2.getModel();
    for (int i = 0; i < modelTime.getRowCount(); i++) {
        Object val = modelTime.getValueAt(i, 0);
        if (val instanceof Boolean && (Boolean) val) {
            temTimeSelecionado = true;
            break;
        }
    }

    if (temPersonagemSelecionado) {
        excluirPersonagensSelecionados();
        return;
    }

    if (temTimeSelecionado) {
        excluirTimesSelecionados();
        return;
    }

    JOptionPane.showMessageDialog(this, "Nenhum personagem ou time selecionado para exclusão!");
}
    private void excluirPersonagensSelecionados() {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    java.util.List<Integer> linhasRemover = new ArrayList<>();

    for (int i = 0; i < model.getRowCount(); i++) {
        Object val = model.getValueAt(i, 0);
        if (val instanceof Boolean && (Boolean) val) {
            linhasRemover.add(i);
        }
    }

    for (int i = linhasRemover.size() - 1; i >= 0; i--) {
        int index = linhasRemover.get(i);
        model.removeRow(index);
        if (index < characters.size()) {
            characters.remove(index);
        }
    }

    JOptionPane.showMessageDialog(this, "Personagem(ns) excluído(s) com sucesso!");
}
    private void excluirTimesSelecionados() {
    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
    java.util.List<Integer> linhasRemover = new ArrayList<>();

    for (int i = 0; i < model.getRowCount(); i++) {
        Object val = model.getValueAt(i, 0);
        if (val instanceof Boolean && (Boolean) val) {
            linhasRemover.add(i);
        }
    }

    for (int i = linhasRemover.size() - 1; i >= 0; i--) {
        int index = linhasRemover.get(i);
        model.removeRow(index);
        if (index < teams.size()) {
            teams.remove(index);
        }
    }

    JOptionPane.showMessageDialog(this, "Time(s) excluído(s) com sucesso!");

    }//GEN-LAST:event_BtnExcluirMouseClicked
    
    private void loadTeamInBattle(RpgCharacter[] playerTeam, RpgCharacter[] computerTeam){
        for(int i =0;i<3;i++){
            switch(playerTeam[i].getRpgClassName()){
            case "Warrior":
                labelCharImage[i].setIcon(new javax.swing.ImageIcon(".\\src\\main\\java\\com\\mycompany\\mavenproject1\\images\\warriorBody.png"));
                labelCharIcon[i].setIcon(new javax.swing.ImageIcon(".\\src\\main\\java\\com\\mycompany\\mavenproject1\\images\\warriorIcon.png"));
                break;
            case "Archer":
                labelCharImage[i].setIcon(new javax.swing.ImageIcon(".\\src\\main\\java\\com\\mycompany\\mavenproject1\\images\\archerBody.png"));
                labelCharIcon[i].setIcon(new javax.swing.ImageIcon(".\\src\\main\\java\\com\\mycompany\\mavenproject1\\images\\archerIcon.png"));
                break;
            case "Mage":
                labelCharImage[i].setIcon(new javax.swing.ImageIcon(".\\src\\main\\java\\com\\mycompany\\mavenproject1\\images\\mageBody.png"));
                labelCharIcon[i].setIcon(new javax.swing.ImageIcon(".\\src\\main\\java\\com\\mycompany\\mavenproject1\\images\\mageIcon.png"));
                break;    
            default:
                break;
            }
            labelCharName[i].setText(playerTeam[i].getName());
            labelCharHP[i].setText("HP: "+playerTeam[i].getStamina());
            combatPlayerCharacters[i] = playerTeam[i];
        }
        for(int i =0;i<3;i++){
            switch(computerTeam[i].getRpgClassName()){
            case "Warrior":
                labelEnemyImage[i].setIcon(new javax.swing.ImageIcon(".\\src\\main\\java\\com\\mycompany\\mavenproject1\\images\\warriorBodyBack.png"));
                labelEnemyIcon[i].setIcon(new javax.swing.ImageIcon(".\\src\\main\\java\\com\\mycompany\\mavenproject1\\images\\warriorIcon.png"));
                break;
            case "Archer":
                labelEnemyImage[i].setIcon(new javax.swing.ImageIcon(".\\src\\main\\java\\com\\mycompany\\mavenproject1\\images\\archerBodyBack.png"));
                labelEnemyIcon[i].setIcon(new javax.swing.ImageIcon(".\\src\\main\\java\\com\\mycompany\\mavenproject1\\images\\archerIcon.png"));
                break;
            case "Mage":
                labelEnemyImage[i].setIcon(new javax.swing.ImageIcon(".\\src\\main\\java\\com\\mycompany\\mavenproject1\\images\\mageBodyBack.png"));
                labelEnemyIcon[i].setIcon(new javax.swing.ImageIcon(".\\src\\main\\java\\com\\mycompany\\mavenproject1\\images\\mageIcon.png"));
                break;    
            default:
                break;
            }
            labelEnemyName[i].setText(computerTeam[i].getName());
            labelEnemyHP[i].setText("HP: "+computerTeam[i].getStamina());
            combatComputerCharacters[i] = computerTeam[i];
        }
        //recebe os dados da tela TeamLoader
        //cria um array com a ordem de ação dos personagens
        //carrega os dados no frontend
        currentCharacter();
    }
    private void currentCharacter(){
        if(playableCharacter){
            loadButtonClassAttack(combatPlayerCharacters[currentCharacter]);
        }else{
            loadButtonClassAttack(combatComputerCharacters[currentCharacter]);
            loadComputerAttack(combatComputerCharacters[currentCharacter]);
        }
        
        
        
        //lê o array com a ordem de ação dos personagens
        //se o personagem for do jogador
            //chama a função "loadPlayerAttack", passando o atual personagem como parâmetro
        //se for do computador
            //chama a função "loadComputerAttack", passando o atual personagem como parâmetro
        //modifica a variável que indica a posição do array
        //chama a função de novo
    }
    private void loadButtonClassAttack(RpgCharacter character){
        switch(character.getRpgClassName()){
            case "Warrior":
                btnClassAttack.setText("Ataque de Espada");
                break;
            case "Archer":
                btnClassAttack.setText("Ataque de Flecha");
                break;
            case "Mage":
                btnClassAttack.setText("Ataque Mágico");
                break;    
            default:
                break;
        }
        
        //lê o personagem que vai agir
        //verifica a classe
        //se for guerreiro
            //atualiza o texto do botão "btnClassAttack" para "ataque de espada"
        //se for arqueiro
            //atualiza o texto do botão "btnClassAttack" para "ataque de flecha"
        //se for mago
            //atualiza o texto do botão "btnClassAttack" para "ataque mágico"
    }
    private void loadComputerAttack(RpgCharacter character){
        int randomAction = randomGenerator.nextInt(1);
        float damageTaken;
        switch(randomAction){
            case 0:
                damageTaken = character.commonAttack(character, combatPlayerCharacters[currentCharacter]);
                showCombatActionMessage(damageTaken, character, combatPlayerCharacters[currentCharacter], "corpo a corpo");
                break;
            case 1:
                damageTaken =character.specialAttack(character, combatPlayerCharacters[currentCharacter]);
                showCombatActionMessage(damageTaken, character, combatPlayerCharacters[currentCharacter], btnClassAttack.getText());
                break;
            default:
                break;
        }
        updateTeaInBattle();
        //lê o personagem que vai agir
        //seleciona aleatoriamente uma das funções "commonAttack", "specialAttack" ou "deflect"
    }
    private void showCombatActionMessage(float damageTaken, RpgCharacter attacker, RpgCharacter defenser, String attackMethod){
        JOptionPane optionPane = new JOptionPane("Your message here!", JOptionPane.INFORMATION_MESSAGE);
        JDialog dialog =  optionPane.createDialog(null, null);//new JDialog();
        if(damageTaken < 0){
            optionPane.setMessage(attacker.getName()+ " deu "+damageTaken*-1+" no "+defenser.getName()+" com "+attackMethod);
        }else{
            optionPane.setMessage(defenser.getName()+" desviou do ataque");
        }
        
        Timer timer = new Timer(2000, new ActionListener() { // 3000ms = 3 seconds
            @Override
            public void actionPerformed(ActionEvent e) {
                dialog.dispose(); // Close the dialog
            }
        });
        timer.setRepeats(false); // Ensure the timer only fires once
        timer.start();
        dialog.pack();
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBatalharTime;
    private javax.swing.JButton BtnExcluir;
    private javax.swing.JButton BtnSalvarImagem;
    private javax.swing.JButton BtnSalvarTime;
    private javax.swing.JLabel LbnImagem;
    private javax.swing.JLabel TimeImagem1;
    private javax.swing.JLabel TimeImagem2;
    private javax.swing.JLabel TimeImagem3;
    private javax.swing.JButton btnBattleRun;
    private javax.swing.JButton btnClassAttack;
    private javax.swing.JButton btnCommonAttack;
    private javax.swing.JButton btnDeflect;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cbRpgClass;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    javax.swing.JTable jTable1;
    javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel labelChar1HP;
    private javax.swing.JLabel labelChar1Icon;
    private javax.swing.JLabel labelChar1Image;
    private javax.swing.JLabel labelChar1Name;
    private javax.swing.JLabel labelChar2HP;
    private javax.swing.JLabel labelChar2Icon;
    private javax.swing.JLabel labelChar2Image;
    private javax.swing.JLabel labelChar2Name;
    private javax.swing.JLabel labelChar3HP;
    private javax.swing.JLabel labelChar3Icon;
    private javax.swing.JLabel labelChar3Image;
    private javax.swing.JLabel labelChar3Name;
    private javax.swing.JLabel labelEnemy1HP;
    private javax.swing.JLabel labelEnemy1Icon;
    private javax.swing.JLabel labelEnemy1Image;
    private javax.swing.JLabel labelEnemy1Name;
    private javax.swing.JLabel labelEnemy2HP;
    private javax.swing.JLabel labelEnemy2Icon;
    private javax.swing.JLabel labelEnemy2Image;
    private javax.swing.JLabel labelEnemy2Name;
    private javax.swing.JLabel labelEnemy3HP;
    private javax.swing.JLabel labelEnemy3Icon;
    private javax.swing.JLabel labelEnemy3Image;
    private javax.swing.JLabel labelEnemy3Name;
    private javax.swing.JMenuItem miBattleCard;
    private javax.swing.JMenuItem miCharacterEditorCard;
    private javax.swing.JMenuItem miTeamEditorCard;
    private javax.swing.JTextField tfAgility;
    private javax.swing.JTextField tfCharacterName;
    private javax.swing.JTextField tfIntelligence;
    private javax.swing.JTextField tfStrength;
    private javax.swing.JTextField tfVitality;
    private javax.swing.JTextField txtChar1Name;
    private javax.swing.JTextField txtChar2Name;
    private javax.swing.JTextField txtChar3Name;
    // End of variables declaration//GEN-END:variables
}
